h1. Purpose of this fork

To add (and remove!) some stuff I like and "fix" some odd key bindings I
really don't like :-)

h1. Vim

It is recommended that you use gVim in either Windows or Linux and MacVim for
Mac. Download from:

* (Windows) http://www.vim.org/download.php#pc (gvim73_46.exe)
* (Mac) https://github.com/b4winckler/macvim/downloads (snapshot-56)

h1. Bundled Plugins

* "Align":http://www.vim.org/scripts/script.php?script_id=294 - align blocks of text using equal sign, make comment boxes and more
* "bufexplorer":http://www.vim.org/scripts/script.php?script_id=42 - open buffers browser
* "camelcasemotion":http://www.vim.org/script.php?script_id=1905 - move on CamelCase and under_scored words with w, b and e
* "markdown":http://www.vim.org/scripts/script.php?script_id=1242 - syntax highlight for Markdown
* "surround":http://www.vim.org/scripts/script.php?script_id=1697 - add, change, remove surrounding parentheses, brackets, quotes, etc
* "taglist_45":http://www.vim.org/scripts/script.php?script_id=273 - uses ctags to lay out source files structure
* "textile":http://www.vim.org/scripts/script.php?script_id=2305 - syntax highlight for Textile
* "vim-colors-solarized":https://github.com/altercation/vim-colors-solarized - a really cool color scheme
* "vim-mercurial":https://github.com/DasIch/vim-mercurial - syntax highlight for Mercurial commit messages
* "gitolite.vim":https://github.com/tmatilai/gitolite.vim - syntax highlight for gitolite configuration files
* "vim-protobuf-syntax":https://github.com/jdevera/vim-protobuf-syntax - syntax highlight for Google Protocol Buffer definition files
* "vimerl":https://github.com/oscarh/vimerl - a set of Erlang plugins for Vim
* "Command-T":https://wincent.com/products/command-t - apparently, it was lost in subspace...

h1. Usage

Troubleshoot: Because of the large amount of submodules, if you ever have any
trouble after pulling from the repository, it will be easier to just back up
your old .vim folder and just git clone a new version.

Clone this repo into your home directory either as .vim (linux/mac) or
vimfiles (Windows). Such as:

<pre><code>
git clone git://github.com/akitaonrails/vimfiles.git ~/.vim
</pre></code>

Then 'cd' into the repo and run this to get the snippets submodule:

<pre><code>
git submodule init
git submodule update
</code></pre>

Now you should create a new <tt>.vimrc</tt> file in your home directory that
loads the pre-configured one that comes bundled in this package. You can do it
on Linux/Mac using a symbolic link:

<pre><code>
$ ln -s ~/.vim/vimrc .vimrc
$ ln -s ~/.vim/gvimrc .gvimrc
</code></pre>

On Windows you should create a <tt>_vimrc</tt> (underline instead of dot) and a
<tt>_gvimrc</tt> and add the following line inside:

_vimrc:
<pre><code>
source ~/vimfiles/vimrc
</code></pre>

_gvimrc:
<pre><code>
source ~/vimfiles/gvimrc
</code></pre>

h2. Help Tags

At first usage of vim, type ":" while in command mode and execute:

  call pathogen#helptags()

This will make the plugins documentations available upon :help

h2. Dependencies

You will need these dependencies figured out:

* Ruby
* Exuberant Ctags (http://ctags.sourceforge.net/)
* Ncurses-term (in Linux only)

In Ubuntu, for example, you will have to do:

<pre><code>
apt-get install exuberant-ctags ncurses-term
</code></pre>

On Windows you have to download Ctags and add ctags.exe in your PATH.

Mac OS X and most Linux distros come with Ruby already. If you're in Windows
look for Luis Lavena's latest Ruby Installer (http://rubyforge.org/projects/rubyinstaller/)

h2. Vim? WTF?

Visit the following sites to learn more about Vim:

* http://vimcasts.org

There are many sites teaching Vim, if you know of any other that are easy
to follow for newcomers, let me know.

h2. Credits

* Original project and most of the heavy lifting: @scrooloose
* Great Command-T plugin by: Wincent
* Hacks and some snippets: @akitaonrails
